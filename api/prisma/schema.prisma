// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  name         String
  avatar       String
  email        String  @unique
  isTfaEnabled Boolean @default(false)
  school42Id   Int?

  secrets   Secrets @relation(fields: [secretsId], references: [id])
  secretsId Int     @unique

  SentFriendRequests     FriendRequest[] @relation("User_HasMany_SentFriendRequests")
  RecievedFriendRequests FriendRequest[] @relation("User_HasMany_RecievedFriendRequests")

  friends         User[] @relation("friends")
  friendsRelation User[] @relation("friends")

  blockedUsers         User[] @relation("blockedUsers")
  blockedUsersRelation User[] @relation("blockedUsers")

  blockingUsers         User[] @relation("blockingUsers")
  blockingUsersRelation User[] @relation("blockingUsers")

  sentMessages     Message[]       @relation("User_canSendMany_messages")
  receivedMessages Message[]       @relation("User_canReceiveMany_messages")
  Notifications    Notifications[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Secrets {
  id Int @id @default(autoincrement())

  password  String?
  tfaSecret String?
  User      User[]
}

model FriendRequest {
  id Int @id @default(autoincrement())

  requester   User @relation("User_HasMany_SentFriendRequests", fields: [requesterId], references: [id])
  requesterId Int

  recipient   User @relation("User_HasMany_RecievedFriendRequests", fields: [recipientId], references: [id])
  recipientId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([requesterId, recipientId])
}

model Message {
  id     Int  @id @default(autoincrement())
  sender User @relation("User_canSendMany_messages", fields: [senderId], references: [id])

  senderId    Int
  recipient   User @relation("User_canReceiveMany_messages", fields: [recipientId], references: [id])
  recipientId Int

  message String

  isRead Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notifications {
  id          Int    @id @default(autoincrement())
  event       String
  data        String
  recipient   User   @relation(fields: [recipientId], references: [id])
  recipientId Int

  isRead Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
